{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/Udemy/redux--01-start/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport counterReducer from './store/reducers/counter';\nimport resultReducer from './store/reducers/result';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rootReducer = combineReducers({\n  ctr: counterReducer,\n  res: resultReducer\n});\n\nconst logger = store => {\n  return next => {\n    return action => {\n      console.log('[Middleware] Dispatching', action);\n      const result = next(action);\n      console.log('[Middleware] next state', store.getState());\n      return result;\n    };\n  };\n}; //google chrome redux extension\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(logger, thunk)));\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 41\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 17\n}, this), document.getElementById('root'));\nregisterServiceWorker();","map":{"version":3,"sources":["/home/user/Documents/Udemy/redux--01-start/src/index.js"],"names":["React","ReactDOM","createStore","combineReducers","applyMiddleware","compose","Provider","thunk","App","registerServiceWorker","counterReducer","resultReducer","rootReducer","ctr","res","logger","store","next","action","console","log","result","getState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,aAAP,MAA0B,yBAA1B;;AAEA,MAAMC,WAAW,GAAGT,eAAe,CAAC;AAChCU,EAAAA,GAAG,EAAEH,cAD2B;AAEhCI,EAAAA,GAAG,EAAEH;AAF2B,CAAD,CAAnC;;AAKA,MAAMI,MAAM,GAAGC,KAAK,IAAI;AACpB,SAAOC,IAAI,IAAI;AACX,WAAOC,MAAM,IAAI;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,MAAxC;AACA,YAAMG,MAAM,GAAGJ,IAAI,CAACC,MAAD,CAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCJ,KAAK,CAACM,QAAN,EAAvC;AACA,aAAOD,MAAP;AACH,KALD;AAMH,GAPD;AAQH,CATD,C,CAWA;;;AACA,MAAME,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CpB,OAAxE;AAEA,MAAMW,KAAK,GAAGd,WAAW,CAACU,WAAD,EAAcW,gBAAgB,CAACnB,eAAe,CAACW,MAAD,EAASR,KAAT,CAAhB,CAA9B,CAAzB;AAEAN,QAAQ,CAACyB,MAAT,eAAgB,QAAC,QAAD;AAAU,EAAA,KAAK,EAAEV,KAAjB;AAAA,yBAAwB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAxB;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA4DW,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA5D;AACAnB,qBAAqB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport counterReducer from './store/reducers/counter';\nimport resultReducer from './store/reducers/result';\n\nconst rootReducer = combineReducers({\n    ctr: counterReducer,\n    res: resultReducer\n});\n\nconst logger = store => {\n    return next => {\n        return action => {\n            console.log('[Middleware] Dispatching', action);\n            const result = next(action);\n            console.log('[Middleware] next state', store.getState());\n            return result;\n        }\n    }\n};\n\n//google chrome redux extension\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(logger, thunk)));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\nregisterServiceWorker();\n"]},"metadata":{},"sourceType":"module"}