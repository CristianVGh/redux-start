{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from \"../utility\";\nconst initialState = {\n  results: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.STORE_RESULT:\n      return updateObject(state, {\n        results: state.results.concat({\n          id: new Date(),\n          value: action.result\n        })\n      });\n\n    case actionTypes.DELETE_RESULT:\n      return updateObject(state, {\n        results: updateArray\n      });\n      const updateArray = state.results.filter(result => result.id !== action.resultElementId);\n      return { ...state,\n        results: updateArray\n      };\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/user/Documents/Udemy/redux--01-start/src/store/reducers/result.js"],"names":["actionTypes","updateObject","initialState","results","reducer","state","action","type","STORE_RESULT","concat","id","Date","value","result","DELETE_RESULT","updateArray","filter","resultElementId"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AADQ,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,WAAW,CAACQ,YAAjB;AACI,aAAOP,YAAY,CAACI,KAAD,EAAQ;AAACF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcM,MAAd,CAAqB;AAACC,UAAAA,EAAE,EAAE,IAAIC,IAAJ,EAAL;AAAiBC,UAAAA,KAAK,EAAEN,MAAM,CAACO;AAA/B,SAArB;AAAV,OAAR,CAAnB;;AACJ,SAAKb,WAAW,CAACc,aAAjB;AACI,aAAOb,YAAY,CAACI,KAAD,EAAQ;AAAEF,QAAAA,OAAO,EAAEY;AAAX,OAAR,CAAnB;AACA,YAAMA,WAAW,GAAGV,KAAK,CAACF,OAAN,CAAca,MAAd,CAAqBH,MAAM,IAAIA,MAAM,CAACH,EAAP,KAAcJ,MAAM,CAACW,eAApD,CAApB;AACA,aAAO,EACH,GAAGZ,KADA;AAEHF,QAAAA,OAAO,EAAEY;AAFN,OAAP;AANR;;AAYA,SAAOV,KAAP;AACH,CAdD;;AAgBA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes'\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n    results: []\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case actionTypes.STORE_RESULT:\n            return updateObject(state, {results: state.results.concat({id: new Date(), value: action.result })})\n        case actionTypes.DELETE_RESULT:\n            return updateObject(state, { results: updateArray})\n            const updateArray = state.results.filter(result => result.id !== action.resultElementId);\n            return {\n                ...state,\n                results: updateArray\n            }\n    }\n\n    return state;\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}