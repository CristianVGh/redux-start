{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nconst initialState = {\n  counter: 0\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.INCREMENT:\n      //update immutably\n      const newState = Object.assign({}, state);\n      newState.counter = state.counter + 1;\n      return newState;\n\n    case actionTypes.DECREMENT:\n      return { //update immutably simplified\n        ...state,\n        counter: state.counter - 1\n      };\n\n    case actionTypes.ADD:\n      return { ...state,\n        counter: state.counter + action.value\n      };\n\n    case actionTypes.SUBTRACT:\n      return { ...state,\n        counter: state.counter - action.value\n      };\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/user/Documents/Udemy/redux--01-start/src/store/reducers/counter.js"],"names":["actionTypes","updateObject","initialState","counter","reducer","state","action","type","INCREMENT","newState","Object","assign","DECREMENT","ADD","value","SUBTRACT"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AADQ,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,WAAW,CAACQ,SAAjB;AACI;AACA,YAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,CAAjB;AACAI,MAAAA,QAAQ,CAACN,OAAT,GAAmBE,KAAK,CAACF,OAAN,GAAgB,CAAnC;AACA,aAAOM,QAAP;;AACJ,SAAKT,WAAW,CAACY,SAAjB;AACI,aAAO,EACH;AACA,WAAGP,KAFA;AAGHF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB;AAHtB,OAAP;;AAKJ,SAAKH,WAAW,CAACa,GAAjB;AACI,aAAO,EACH,GAAGR,KADA;AAEHF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgBG,MAAM,CAACQ;AAF7B,OAAP;;AAIJ,SAAKd,WAAW,CAACe,QAAjB;AACI,aAAO,EACH,GAAGV,KADA;AAEHF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgBG,MAAM,CAACQ;AAF7B,OAAP;AAlBR;;AAwBA,SAAOT,KAAP;AACH,CA1BD;;AA4BA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    counter: 0,\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case actionTypes.INCREMENT:\n            //update immutably\n            const newState = Object.assign({}, state);\n            newState.counter = state.counter + 1;\n            return newState;\n        case actionTypes.DECREMENT:\n            return {\n                //update immutably simplified\n                ...state,\n                counter: state.counter - 1\n            }\n        case actionTypes.ADD:\n            return {\n                ...state,\n                counter: state.counter + action.value\n            }\n        case actionTypes.SUBTRACT:\n            return {\n                ...state,\n                counter: state.counter - action.value\n            }\n    }\n\n    return state;\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}