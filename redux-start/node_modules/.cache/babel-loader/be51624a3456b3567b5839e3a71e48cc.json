{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from \"../utility\";\nconst initialState = {\n  results: []\n};\n\nconst deleteResult = (state, action) => {\n  const updateArray = state.results.filter(result => result.id !== action.resultElementId);\n  return updateObject(state, {\n    results: updateArray\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.STORE_RESULT:\n      return updateObject(state, {\n        results: state.results.concat({\n          id: new Date(),\n          value: action.result\n        })\n      });\n\n    case actionTypes.DELETE_RESULT:\n      return deleteResult(state, action);\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/user/Documents/Udemy/redux--01-start/src/store/reducers/result.js"],"names":["actionTypes","updateObject","initialState","results","deleteResult","state","action","updateArray","filter","result","id","resultElementId","reducer","type","STORE_RESULT","concat","Date","value","DELETE_RESULT"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AADQ,CAArB;;AAIA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpC,QAAMC,WAAW,GAAGF,KAAK,CAACF,OAAN,CAAcK,MAAd,CAAqBC,MAAM,IAAIA,MAAM,CAACC,EAAP,KAAcJ,MAAM,CAACK,eAApD,CAApB;AACA,SAAOV,YAAY,CAACI,KAAD,EAAQ;AAAEF,IAAAA,OAAO,EAAEI;AAAX,GAAR,CAAnB;AACH,CAHD;;AAKA,MAAMK,OAAO,GAAG,CAACP,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC9C,UAAOA,MAAM,CAACO,IAAd;AACI,SAAKb,WAAW,CAACc,YAAjB;AACI,aAAOb,YAAY,CAACI,KAAD,EAAQ;AAACF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcY,MAAd,CAAqB;AAACL,UAAAA,EAAE,EAAE,IAAIM,IAAJ,EAAL;AAAiBC,UAAAA,KAAK,EAAEX,MAAM,CAACG;AAA/B,SAArB;AAAV,OAAR,CAAnB;;AACJ,SAAKT,WAAW,CAACkB,aAAjB;AACI,aAAOd,YAAY,CAACC,KAAD,EAAQC,MAAR,CAAnB;AAJR;;AAMA,SAAOD,KAAP;AACH,CARD;;AAUA,eAAeO,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes'\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n    results: []\n}\n\nconst deleteResult = (state, action) => {\n    const updateArray = state.results.filter(result => result.id !== action.resultElementId);\n    return updateObject(state, { results: updateArray});\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case actionTypes.STORE_RESULT:\n            return updateObject(state, {results: state.results.concat({id: new Date(), value: action.result })});\n        case actionTypes.DELETE_RESULT:\n            return deleteResult(state, action);\n    }\n    return state;\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}